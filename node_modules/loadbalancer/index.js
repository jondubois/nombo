var http = require('http');
var httpProxy = require('http-proxy');
var url = require('url');

var proxy = new httpProxy.RoutingProxy();

module.exports = LoadBalancer;

function LoadBalancer(options) {
	this.sourcePort = options.sourcePort;
	this.destPorts = options.destPorts;
	this._destRegex = /([^:]*):([^:]*):/;
	
	http.createServer(this.proxy.bind(this)).listen(this.sourcePort);
};

LoadBalancer.prototype.setDestPorts = function (ports) {
	this.destPorts = ports;
};

LoadBalancer.prototype._parseDest = function (req) {
	var query = url.parse(req.url, true).query;
	
	if (!query || !query.sid) {
		return null;
	}
	
	var result = query.sid.match(this._destRegex);
	
	if (!result) {
		return null;
	}
	
	return {
		host: result[1] || 'localhost',
		port: parseInt(result[2]) || 8000
	};
};

LoadBalancer.prototype._randomPort = function() {
	var rand = Math.floor(Math.random() * this.destPorts.length);
	return this.destPorts[rand];
};

LoadBalancer.prototype.proxy = function (req, res) {
	var dest = this._parseDest(req);
	
	if (!dest) {
		dest = {
			host: 'localhost',
			port: this._randomPort()
		};
	}
	
	proxy.proxyRequest(req, res, dest);
};
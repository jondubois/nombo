var fs = require('fs');
var path = require('path');
var pathManager = require('nombo/pathmanager');
var cache = require('nombo/cache');

var CacheResponder = new (function () {
	var self = this;
	var unrefreshableRegex = /[.](js|css|less)$/;
	var unrefreshables = {};
	
	self.setUnrefreshable = function (resource) {
		unrefreshables[resource] = true;
	};
	
	self.clearUnrefreshable = function (resource) {
		delete unrefreshables[index];
	};
	
	self.run = function (req, res, next) {
		var encoding = req.rout.encoding;
		var refreshable = !unrefreshables.hasOwnProperty(req.url) && (!unrefreshableRegex.test(req.url) || req.params.ck);
		
		if (req.params.ck && refreshable) {
			next();
		} else {
			if (cache.has(encoding, req.url)) {
				var ifNoneMatch = req.headers['if-none-match'];
				if (ifNoneMatch && ifNoneMatch == cache.getModifiedTime(encoding, req.url)) {
					res.writeHead(304);
					res.end();
				} else {
					var headers = cache.getHeaders(encoding, req.url);
					var i;
					for (i in headers) {
						res.setHeader(i, headers[i]);
					}
					res.writeHead(200);
					res.end(cache.get(encoding, req.url));
				}
			} else {
				if (encoding != cache.ENCODING_PLAIN) {
					if (cache.has(cache.ENCODING_PLAIN, req.url)) {
						req.rout.buffer = cache.get(cache.ENCODING_PLAIN, req.url);
					}
				}
				next();
			}
		}
	};
})();

module.exports = CacheResponder;

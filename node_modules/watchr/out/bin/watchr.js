// Generated by CoffeeScript 1.4.0
var changes, cwd, path, watchPath, watchr,
  __slice = [].slice;

path = require('path');

watchr = require(__dirname + '/../lib/watchr');

cwd = process.cwd();

watchPath = process.argv.length === 3 ? path.resolve(cwd, process.argv[2]) : cwd;

changes = 0;

watchr.watch({
  path: watchPath,
  listeners: {
    log: function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.log('a log message occured:', args);
    },
    error: function(err) {
      return console.log('an error occured:', err);
    },
    watching: function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.log('a new watcher instance finished setting up', args);
    },
    change: function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.log('a change event occured:', args);
    }
  },
  next: function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return console.log('watching for all our paths has completed', args);
  }
});

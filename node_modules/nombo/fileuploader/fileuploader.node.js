var fs = require('fs'),
	util = require('util'),
	path = require('path'),
	pathmanager = require('nombo/pathmanager'),
	fileuploader = require('fileuploader'),
	Stream = require('stream').Stream,
	Buffer = require('buffer').Buffer,
	formidable = require('formidable');

var FileUploader = new (function() {
	var self = this;
	self._options = {
		uploadURL: '/~upload',
		uploadDir: pathmanager.getAppPath() + '/files/',
		maxPostSize: 500000000,
		maxFileSize: 100000000
	}
	
	self._validateFile = function(file) {
		if(self._options.maxFileSize && file.size > self._options.maxFileSize) {
			return false;
		}
		return true;
	}
	
	self.upload = function(req, res, next) {
		if(req.url == self._options.uploadURL) {
			res.setHeader('Pragma', 'no-cache');
            		res.setHeader('Cache-Control', 'no-cache, must-revalidate');
            		res.setHeader('Content-Type', 'text/html');
            		res.writeHead(200);
            		
			var session = req.session;
			
			try {
				var uploader = fileuploader.upload(req);
				
				uploader.on('uploadcomplete', function(fileData) {
					var uploadPath;
					if(req.uploadPath) {
						uploadPath = req.uploadPath;
					} else {
						uploadPath = path.normalize(self._options.uploadDir + fileData.name);
					}
					
					fs.rename(fileData.path, uploadPath);
					res.end('{"success": true}');
					session && session.emit('uploadcomplete');
				});
			
				uploader.on('uploadfail', function() {
					res.end('{"success": false}');
					session && session.emit('uploadfail');
				});
				
				uploader.on('uploadprogress', function(progressData) {
					session && session.emit('uploadprogress', progressData);
				});
			} catch(e) {
				res.end('{"success": false}');
				session && session.emit('uploadfail');
			}
		} else {
			res.writeHead(500);
			res.end();
		}
	}
})();

module.exports = FileUploader;

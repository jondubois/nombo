{
  "name": "engine.io-client",
  "description": "Client for the realtime Engine",
  "version": "0.6.3",
  "homepage": "https://github.com/LearnBoost/engine.io-client",
  "contributors": [
    {
      "name": "Guillermo Rauch",
      "email": "rauchg@gmail.com"
    },
    {
      "name": "Vladimir Dronnikov",
      "email": "dronnikov@gmail.com"
    },
    {
      "name": "Christoph Dorn",
      "url": "https://github.com/cadorn"
    }
  ],
  "dependencies": {
    "ws": "0.4.25",
    "xmlhttprequest": "1.5.0",
    "emitter": "http://github.com/component/emitter/archive/1.0.0.tar.gz",
    "indexof": "0.0.1",
    "engine.io-parser": "0.3.0",
    "debug": "0.7.2"
  },
  "devDependencies": {
    "mocha": "*",
    "serve": "*",
    "expect.js": "*",
    "istanbul": "*"
  },
  "component": {
    "scripts": {
      "engine.io/index.js": "lib/index.js",
      "engine.io/socket.js": "lib/socket.js",
      "engine.io/transport.js": "lib/transport.js",
      "engine.io/emitter.js": "lib/emitter.js",
      "engine.io/util.js": "lib/util.js",
      "engine.io/transports/index.js": "lib/transports/index.js",
      "engine.io/transports/polling.js": "lib/transports/polling.js",
      "engine.io/transports/polling-xhr.js": "lib/transports/polling-xhr.js",
      "engine.io/transports/polling-jsonp.js": "lib/transports/polling-jsonp.js",
      "engine.io/transports/websocket.js": "lib/transports/websocket.js",
      "engine.io/transports/flashsocket.js": "lib/transports/flashsocket.js"
    }
  },
  "readme": "# Engine.IO client\n\n[![Build Status](https://secure.travis-ci.org/LearnBoost/engine.io-client.png)](http://travis-ci.org/LearnBoost/engine.io-client)\n[![NPM version](https://badge.fury.io/js/engine.io-client.png)](http://badge.fury.io/js/engine.io-client)\n\nThis is the client for [Engine](http://github.com/learnboost/engine.io), the\nimplementation of transport-based cross-browser/cross-device bi-directional\ncommunication layer for [Socket.IO](http://github.com/learnboost/socket.io).\n\n## Hello World\n\n### With component\n\nEngine.IO is a [component](http://github.com/component/component), which\nmeans you can include it by using `require` on the browser:\n\n```js\nvar socket = require('engine.io')('ws://localhost');\nsocket.onopen = function(){\n  socket.onmessage = function(data){};\n  socket.onclose = function(){};\n};\n```\n\n### Standalone\n\nIf you decide not to use component you can find a `engine.io.js` file in\nthis repository, which is a standalone build you can use as follows:\n\n```html\n<script src=\"/path/to/build.js\"></script>\n<script>\n  // eio = Socket\n  var socket = eio('ws://localhost');\n  socket.onopen = function(){\n    socket.onmessage = function(data){};\n    socket.onclose = function(){};\n  };\n</script>\n```\n\n### Node.JS\n\nAdd `engine.io-client` to your `package.json` and then:\n\n```js\nvar socket = require('engine.io-client')('ws://localhost');\nsocket.onopen = function(){\n  socket.onmessage = function(data){};\n  socket.onclose = function(){};\n};\n```\n\n## Features\n\n- Lightweight\n  - Lazyloads Flash transport\n- Isomorphic with WebSocket API\n- Written for node, runs on browser thanks to\n  [browserbuild](http://github.com/learnboost/browserbuild)\n  - Maximizes code readability / maintenance.\n  - Simplifies testing.\n- Transports are independent of `Engine`\n  - Easy to debug\n  - Easy to unit test\n- Runs inside HTML5 WebWorker\n\n## API\n\n<hr><br>\n\n### Socket\n\nThe client class. Mixes in [Emitter](http://github.com/component/emitter).\nExposed as `eio` in the browser standalone build.\n\n#### Properties\n\n- `protocol` _(Number)_: protocol revision number\n- `onopen` (_Function_)\n  - `open` event handler\n- `onmessage` (_Function_)\n  - `message` event handler\n- `onclose` (_Function_)\n  - `message` event handler\n\n#### Events\n\n- `open`\n  - Fired upon successful connection.\n- `message`\n  - Fired when data is received from the server.\n  - **Arguments**\n    - `String`: utf-8 encoded data\n- `close`\n  - Fired upon disconnection.\n- `error`\n  - Fired when an error occurs.\n- `flush`\n  - Fired upon completing a buffer flush\n- `drain`\n  - Fired after `drain` event of transport if writeBuffer is empty\n\n#### Methods\n\n- **constructor**\n    - Initializes the client\n    - **Parameters**\n      - `String` uri\n      - `Object`: optional, options object\n    - **Options**\n      - `upgrade` (`Boolean`): defaults to true, whether the client should try\n      to upgrade the transport from long-polling to something better.\n      - `forceJSONP` (`Boolean`): forces JSONP for polling transport.\n      - `timestampRequests` (`Boolean`): whether to add the timestamp with\n        each transport request. Note: this is ignored if the browser is\n        IE or Android, in which case requests are always stamped (`false`)\n      - `timestampParam` (`String`): timestamp parameter (`t`)\n      - `flashPath` (`String`): path to flash client files with trailing slash\n      - `policyPort` (`Number`): port the policy server listens on (`843`)\n      - `transports` (`Array`): a list of transports to try (in order).\n      Defaults to `['polling', 'websocket', 'flashsocket']`. `Engine`\n      always attempts to connect directly with the first one, provided the\n      feature detection test for it passes.\n- `send`\n    - Sends a message to the server\n    - **Parameters**\n      - `String`: data to send\n      - `Function`: optional, callback upon `drain`\n- `close`\n    - Disconnects the client.\n\n### Transport\n\nThe transport class. Private. _Inherits from EventEmitter_.\n\n#### Events\n\n- `poll`: emitted by polling transports upon starting a new request\n- `pollComplete`: emitted by polling transports upon completing a request\n- `drain`: emitted by polling transports upon a buffer drain\n\n## Reconnecting\n\nA `Socket` instance can be reused. After closing (either by calling\n`Socket#close()` or network close), you can summon `open` again.\n\n## Flash transport\n\nIn order for the Flash transport to work correctly, ensure the `flashPath`\nproperty points to the location where the files `web_socket.js`,\n`swfobject.js` and `WebSocketMainInsecure.swf` are located.\n\nThese files can be found here\n[https://github.com/gimite/web-socket-js.git](https://github.com/gimite/web-socket-js.git)\n\n## Tests\n\n`engine.io-client` is used to test\n[engine](http://github.com/learnboost/engine.io). Running the `engine.io`\ntest suite ensures the client works and vice-versa.\n\nAdditionally, `engine.io-client` has a standalone test suite you can run\nwith `make test` or in the browser with `make test-browser`.\n\n## Support\n\nThe support channels for `engine.io-client` are the same as `socket.io`:\n  - irc.freenode.net **#socket.io**\n  - [Google Groups](http://groups.google.com/group/socket_io)\n  - [Website](http://socket.io)\n\n## Development\n\nTo contribute patches, run tests or benchmarks, make sure to clone the\nrepository:\n\n```\ngit clone git://github.com/LearnBoost/engine.io-client.git\n```\n\nThen:\n\n```\ncd engine.io-client\nnpm install\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Guillermo Rauch &lt;guillermo@learnboost.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "engine.io-client@0.6.3",
  "dist": {
    "shasum": "55902079ddc8d23c943700fa962025efa27bb7d7"
  },
  "_from": "engine.io-client@",
  "_resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-0.6.3.tgz"
}
